from app.sentiment import predict_sentiment

def test_positive_emotion():
    assert predict_sentiment("–Ø —Ç–∞–∫ —Ä–∞–¥, —á—Ç–æ –≤—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å!") in ["—Ä–∞–¥–æ—Å—Ç—å"]

def test_negative_emotion():
    assert predict_sentiment("–ú–Ω–µ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ. –•–æ—á–µ—Ç—Å—è –ø–ª–∞–∫–∞—Ç—å.") in ["–ø–µ—á–∞–ª—å", "–≥–Ω–µ–≤"]

def test_neutral_emotion():
    assert predict_sentiment("–°–µ–≥–æ–¥–Ω—è —è —Ö–æ–¥–∏–ª –≤ –º–∞–≥–∞–∑–∏–Ω.") in ["–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π"]

def test_empty_input():
    try:
        result = predict_sentiment("")
        assert isinstance(result, str) and result in ['–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π', '—Ä–∞–¥–æ—Å—Ç—å', '–ø–µ—á–∞–ª—å', '–≥–Ω–µ–≤', '—Å—Ç—Ä–∞—Ö', '—É–¥–∏–≤–ª–µ–Ω–∏–µ']
    except Exception:
        assert False, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏"

def test_long_input():
    long_text = "–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç. " * 100
    result = predict_sentiment(long_text)
    assert isinstance(result, str)

def test_weird_characters():
    result = predict_sentiment("–ß—Ç–æ —ç—Ç–æ?! ü§îüò†üî•")
    assert isinstance(result, str)

def test_english_input():
    result = predict_sentiment("I am happy today")
    assert isinstance(result, str)
